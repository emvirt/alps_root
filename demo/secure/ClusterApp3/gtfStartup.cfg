
			
// Magic Number
8d8138d9-9038-49db-8873-35ddcbd2a888

// Init - Configure the libraries which shall be loaded

INIT LOAD FW_PATH "GtfCore"
INIT LOAD FW_PATH "GtfDisplayManager"
INIT LOAD FW_PATH "GtfService"
INIT LOAD FW_PATH "GtfWidgetSet"
INIT LOAD FW_PATH "GtfOpenGLRenderer"


INIT LOAD FW_PATH "GtfCan"

// configure type manager
STARTUP 0 MESSAGE 317 MODEL_PATH "types.bin"

// create core model
//  * UINT32 unique id of the model
STARTUP 0 MESSAGE 300 UINT32 0xDEADBEAF

// create a gtf core instance using the model above:
// -- create a thread for this core instance --
//  * UINT32 the model to attach to
//  * UINT8 the user id to use, when executing the model
STARTUP 0 MESSAGE 306 UINT32 0xDEADBEAF UINT8 0

// configure datapool
STARTUP 499 MESSAGE 308 UINT32 0xDEADBEAF         MODEL_PATH "datapool.bdf"
STARTUP 499 MESSAGE 309 UINT32 0xDEADBEAF         MODEL_PATH "datapool.bvf"

// configure state machine
STARTUP 499 MESSAGE 311 UINT32 0xDEADBEAF         MODEL_PATH "model.bin"
STARTUP 499 MESSAGE 312 UINT32 0xDEADBEAF         MODEL_PATH "resources.bin"

// create a "Display"
//  * UINT32 unique id of the "display"
//  * UINT32 unique id of the view factory to use - created by MESSAGE 450/451
//  * UINT32 unique id of the model to connecto to - created by MESSAGE 300
//  * UINT8 user id of the framework instance to attach to


// connect a "Display" to a state machine
//  * UINT32 unique id of the "display"
//  * STRBUF name of the statemachine


// configure converter
//  * STRBUF source model - where the ascii input files are searched
//  * STRBUF output path - where binary files, headers, datapool configuration and source files will be stored
//  * UINT8 Creation Model:
//     - 0 create if missing
//     - 1 always create
//  * UINT8 Endianness:
//     - 0 Little Endian
//     - 1 Big Endian
//  * UINT8 Debugging:
//     - 0 Disable Debug symbols (usually names in binary files)
//     - 1 Enable Debug symbols
//  * UINT8 Secondard file creation - dp monitor config, binary source files, and id header files
//     - 0 Create dp monitor config, and all source files for compilation
//     - 1 create only target relevant binary data
STARTUP 0 MESSAGE 500 MODEL_PATH "" MODEL_PATH "" UINT8 1 UINT8 0 UINT8 1 UINT8 0

// Create Binary Viewfactory
STARTUP 403 MESSAGE 450 UINT32 0xDEADBEAF MODEL_PATH "views.bin"

// Set project name



// Create a win32 software renderer and/or OpenGL ES 2.0 renderer and connect it to a display
// Slot 0: UINT32 ID of the Displaymanger to connect to created by message HMI_MID_GTF_DISPLAY_CONNECT (402)
// Slot 1: UINT16 x position in pixels
// Slot 2: UINT16 y position in pixels
// Slot 3: UINT16 width of the display in pixels (0 means a default width)
// Slot 4: UINT16 height of the display in pixels (0 means a default height) 
// Slot 5: UINT8 operating mode (flags)
//         - RemoteDisplay    = 0x01
//         - LocalDisplay     = 0x02
//         - StandardFrame    = 0x04 | LocalDisplay
//         - FpsFrame         = 0x08 | LocalDisplay | StandardFrame
//         - SystemMemory     = 0x10    (win32 software renderer)
//         - DisableVSync     = 0x10    (OpenGLES 2.0 Renderer)
//         - EnableSwapThread = 0x20    (OpenGLES 2.0 Renderer, not supported on Windows emulation)
// Slot 6: UINT8 color mode (OpenGL ES 2.0 Renderer)
//         - Don't care, take anyone which is available = 0
//         - 32 Bit Framebuffer = 1
//         - 16 Bit Framebuffer = 2
// Slot 7: UINT8 hardware layer (OpenGL ES 2.0 Renderer)
// Slot 8: UINT8 multisampling (OpenGL ES 2.0 Renderer)
//         - No Multisampling    = 0
//         - 1 Sample per pixel  = 1
//         - 2 Samples per pixel = 2


// service mapper TCP port
STARTUP 0 MESSAGE 305 UINT16 60000




			
			